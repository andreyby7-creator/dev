#!/bin/bash
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/security/security-scan.sh
# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞: cd /home/boss/Projects/dev && ./scripts/security-scan.sh

# üîí SaleSpot BY - Security Scan Script
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏ –∫–æ–¥–∞

set -e

echo "üîí SaleSpot BY - Security Scan"
echo "==============================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üìã Step 1: Checking for security vulnerabilities...${NC}"
pnpm audit --audit-level moderate

echo -e "${BLUE}üìã Step 2: Checking for outdated dependencies...${NC}"
pnpm outdated || echo -e "${YELLOW}‚ö†Ô∏è  Some dependencies are outdated${NC}"

echo -e "${BLUE}üìã Step 3: Checking for unused dependencies...${NC}"
npx depcheck --json > depcheck-results.json 2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è  Depcheck not available${NC}"

echo -e "${BLUE}üìã Step 4: Running Trivy vulnerability scanner...${NC}"
if command -v trivy &> /dev/null; then
    trivy fs . --format table --severity HIGH,CRITICAL
else
    echo -e "${YELLOW}‚ö†Ô∏è  Trivy not installed. Install with: brew install trivy${NC}"
fi

echo ""
echo -e "${GREEN}‚úÖ Security scan completed!${NC}"
echo "üîí Check the results above for any security issues."
