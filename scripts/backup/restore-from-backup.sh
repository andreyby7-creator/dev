#!/bin/bash
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/backup/restore-from-backup.sh

# Restore from Backup Script
# Usage: ./scripts/restore-from-backup.sh

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
PROJECT_DIR="/home/boss/Projects/dev"
BACKUP_DIR="$PROJECT_DIR/backups"
LOG_FILE="/tmp/restore.log"

# Functions
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}" | tee -a "$LOG_FILE"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}" | tee -a "$LOG_FILE"
}

error() {
    echo -e "${RED}‚ùå $1${NC}" | tee -a "$LOG_FILE"
}

check_backup_file() {
    local backup_file="$1"
    
    if [[ ! -f "$backup_file" ]]; then
        error "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $backup_file"
        return 1
    fi
    
    log "–ù–∞–π–¥–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $backup_file"
    log "–†–∞–∑–º–µ—Ä: $(du -sh "$backup_file" | cut -f1)"
    return 0
}

check_checksum() {
    local backup_file="$1"
    local checksum_file="$2"
    
    if [[ -f "$checksum_file" ]]; then
        log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã..."
        if sha256sum -c "$checksum_file"; then
            success "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤–µ—Ä–Ω–∞"
        else
            error "–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!"
            return 1
        fi
    else
        warning "–§–∞–π–ª –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É"
    fi
}

stop_services() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    if [[ -f "$PROJECT_DIR/scripts/stop-all.sh" ]]; then
        "$PROJECT_DIR/scripts/stop-all.sh" || warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    else
        # –†—É—á–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        pkill -f "pnpm\|tsx\|next\|nest" || true
        sleep 2
    fi
    
    success "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

create_current_backup() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
    
    local current_backup="$BACKUP_DIR/backup-current-$(date +%Y%m%d-%H%M).tar.gz"
    
    if [[ -d "$PROJECT_DIR" ]] && [[ "$(ls -A "$PROJECT_DIR" 2>/dev/null)" ]]; then
        cd "$PROJECT_DIR"
        tar -czf "$current_backup" \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=dist \
            --exclude=build \
            --exclude=.next \
            --exclude=backups \
            . 2>/dev/null || warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"
        
        if [[ -f "$current_backup" ]]; then
            success "–°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è: $current_backup"
        fi
    else
        warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

clean_project_directory() {
    log "–û—á–∏—Å—Ç–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    cd "$PROJECT_DIR"
    
    # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã –∫—Ä–æ–º–µ backups –∏ .git
    find . -mindepth 1 -maxdepth 1 ! -name 'backups' ! -name '.git' -exec rm -rf {} + 2>/dev/null || true
    
    # –û—á–∏—Å—Ç–∏—Ç—å node_modules –µ—Å–ª–∏ –µ—Å—Ç—å
    rm -rf node_modules apps/*/node_modules 2>/dev/null || true
    
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –æ—á–∏—â–µ–Ω–∞"
}

restore_from_backup() {
    local backup_file="$1"
    
    log "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: $backup_file"
    
    cd "$PROJECT_DIR"
    
    if tar -xzf "$backup_file"; then
        success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–∞"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
        return 1
    fi
}

install_dependencies() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    cd "$PROJECT_DIR"
    
    if command -v pnpm >/dev/null 2>&1; then
        if pnpm install; then
            success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        else
            error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
            return 1
        fi
    else
        error "pnpm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pnpm –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        return 1
    fi
}

verify_restoration() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    cd "$PROJECT_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    local required_files=("package.json" "tsconfig.json" "apps/api/package.json" "apps/web/package.json")
    local missing_files=()
    
    for file in "${required_files[@]}"; do
        if [[ ! -f "$file" ]]; then
            missing_files+=("$file")
        fi
    done
    
    if [[ ${#missing_files[@]} -gt 0 ]]; then
        error "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: ${missing_files[*]}"
        return 1
    fi
    
    success "–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å TypeScript
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript..."
    if pnpm run type-check >/dev/null 2>&1; then
        success "TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞"
    else
        warning "TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å ESLint
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint..."
    if pnpm run lint >/dev/null 2>&1; then
        success "ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞"
    else
        warning "ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞"
    fi
}

start_services() {
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    cd "$PROJECT_DIR"
    
    if [[ -f "scripts/start-all.sh" ]]; then
        if ./scripts/start-all.sh; then
            success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
        else
            warning "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        fi
    else
        warning "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã –≤—Ä—É—á–Ω—É—é"
    fi
}

main() {
    echo "üöÄ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ SaleSpot BY –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    echo "================================================"
    
    # –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥ —Ñ–∞–π–ª
    > "$LOG_FILE"
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    if [[ ! -d "$PROJECT_DIR" ]]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $PROJECT_DIR"
        exit 1
    fi
    
    # –ù–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    local latest_backup=$(find "$BACKUP_DIR" -name "salespot-by-complete-backup-*.tar.gz" -type f -printf '%T@ %p\n' 2>/dev/null | sort -n | tail -1 | cut -d' ' -f2-)
    
    if [[ -z "$latest_backup" ]]; then
        error "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $BACKUP_DIR"
        exit 1
    fi
    
    # –ù–∞–π—Ç–∏ —Ñ–∞–π–ª –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
    local backup_name=$(basename "$latest_backup" .tar.gz)
    local checksum_file="$BACKUP_DIR/backup-checksum-${backup_name#salespot-by-complete-backup-}.txt"
    
    log "–ù–∞–π–¥–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: $latest_backup"
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    if ! check_backup_file "$latest_backup"; then
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—É—é —Å—É–º–º—É
    if ! check_checksum "$latest_backup" "$checksum_file"; then
        exit 1
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã
    stop_services
    
    # –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    create_current_backup
    
    # –û—á–∏—Å—Ç–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    clean_project_directory
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
    if ! restore_from_backup "$latest_backup"; then
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if ! install_dependencies; then
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    if ! verify_restoration; then
        exit 1
    fi
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã
    start_services
    
    echo ""
    echo "üéâ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo "================================================"
    echo "üìä –õ–æ–≥–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: $LOG_FILE"
    echo "üåê Web –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:3000"
    echo "üîå API –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:3001"
    echo "üìö Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:3001/docs"
    echo ""
    echo "–î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "  ./scripts/status.sh"
    echo ""
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
