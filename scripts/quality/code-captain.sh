#!/bin/bash
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/quality/code-captain.sh [--fix] [--report]

# üõ°Ô∏è –ö–∞–ø–∏—Ç–∞–Ω –ß–∏—Å—Ç–æ–≥–æ –ö–æ–¥–∞ - –°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
# –ê–≤—Ç–æ—Ä: SaleSpot BY Team
# –í–µ—Ä—Å–∏—è: 1.0.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${BLUE}üõ°Ô∏è  –ö–∞–ø–∏—Ç–∞–Ω –ß–∏—Å—Ç–æ–≥–æ –ö–æ–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É!${NC}"
    echo -e "${CYAN}================================================${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${PURPLE}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_tools() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."
    
    if ! command -v pnpm &> /dev/null; then
        print_error "pnpm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pnpm: npm install -g pnpm"
        exit 1
    fi
    
    if ! command -v node &> /dev/null; then
        print_error "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    print_success "–í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript
check_typescript() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤..."
    
    if pnpm run type-check; then
        print_success "TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
    else
        print_error "TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: pnpm run type-check –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—à–∏–±–æ–∫"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint
check_eslint() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint..."
    
    if pnpm run lint; then
        print_success "ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
    else
        print_warning "ESLint –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø—Ä–æ–±–ª–µ–º—ã"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: pnpm run lint:fix –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Prettier
check_prettier() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Prettier..."
    
    if pnpm run format:check; then
        print_success "Prettier –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
    else
        print_warning "Prettier –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: pnpm run format –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
        return 1
    fi
}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ Prettier)
auto_fix() {
    print_info "–ó–∞–ø—É—Å–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    # –¢–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Prettier (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
    print_info "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —Å Prettier..."
    pnpm run format
    
    print_success "–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
check_security() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö
    if command -v pnpm &> /dev/null; then
        print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö..."
        pnpm audit --audit-level moderate || print_warning "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö"
    fi
    
    print_success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤
check_tests() {
    print_info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
    
    if pnpm run test; then
        print_success "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
    else
        print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏"
        return 1
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
generate_report() {
    print_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–¥–∞..."
    
    local report_file="reports/code-quality-$(date +%Y%m%d-%H%M%S).md"
    mkdir -p reports
    
    cat > "$report_file" << EOF
# –û—Ç—á–µ—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–¥–∞ - $(date)

## –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏

### TypeScript
- –°—Ç–∞—Ç—É—Å: $(if check_typescript > /dev/null 2>&1; then echo "‚úÖ –£—Å–ø–µ—à–Ω–æ"; else echo "‚ùå –û—à–∏–±–∫–∏"; fi)

### ESLint
- –°—Ç–∞—Ç—É—Å: $(if check_eslint > /dev/null 2>&1; then echo "‚úÖ –£—Å–ø–µ—à–Ω–æ"; else echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"; fi)

### Prettier
- –°—Ç–∞—Ç—É—Å: $(if check_prettier > /dev/null 2>&1; then echo "‚úÖ –£—Å–ø–µ—à–Ω–æ"; else echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"; fi)

### –¢–µ—Å—Ç—ã
- –°—Ç–∞—Ç—É—Å: $(if check_tests > /dev/null 2>&1; then echo "‚úÖ –£—Å–ø–µ—à–Ω–æ"; else echo "‚ùå –û—à–∏–±–∫–∏"; fi)

## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—Å–µ TypeScript –æ—à–∏–±–∫–∏
2. –£—Å—Ç—Ä–∞–Ω–∏—Ç–µ ESLint –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
3. –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–π—Ç–µ –∫–æ–¥ —Å–æ–≥–ª–∞—Å–Ω–æ Prettier
4. –î–æ–±–∞–≤—å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–µ—Å—Ç—ã

EOF

    print_success "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $report_file"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local auto_fix_flag=false
    local generate_report_flag=false
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    while [[ $# -gt 0 ]]; do
        case $1 in
            --fix)
                auto_fix_flag=true
                shift
                ;;
            --report)
                generate_report_flag=true
                shift
                ;;
            --help)
                echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
                echo "–û–ø—Ü–∏–∏:"
                echo "  --fix     –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º"
                echo "  --report  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞"
                echo "  --help    –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
                exit 0
                ;;
            *)
                print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
                exit 1
                ;;
        esac
    done
    
    print_header
    check_tools
    
    local has_errors=false
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫
    if ! check_typescript; then
        has_errors=true
    fi
    
    if ! check_eslint; then
        has_errors=true
    fi
    
    if ! check_prettier; then
        has_errors=true
    fi
    
    check_security
    
    if ! check_tests; then
        has_errors=true
    fi
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    if [ "$auto_fix_flag" = true ]; then
        auto_fix
    fi
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    if [ "$generate_report_flag" = true ]; then
        generate_report
    fi
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo -e "${CYAN}================================================${NC}"
    if [ "$has_errors" = true ]; then
        print_error "–ö–∞–ø–∏—Ç–∞–Ω –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ!"
        print_info "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --fix –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
        exit 1
    else
        print_success "–ö–∞–ø–∏—Ç–∞–Ω –¥–æ–≤–æ–ª–µ–Ω! –ö–æ–¥ —á–∏—Å—Ç, –º–æ–∂–Ω–æ –∫–æ–º–º–∏—Ç–∏—Ç—å."
        exit 0
    fi
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
